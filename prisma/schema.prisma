// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(cuid())
  email        String?   @unique
  phone        String?   @unique
  password     String?   
  googleId     String?   @unique
  provider     AuthProvider @default(LOCAL)
  isVerified   Boolean   @default(false)
  verifiedAt   DateTime?
    
  verificationCodes VerificationCode[]

  refreshTokens     RefreshToken[]
   
  @@map("users")
}

enum AuthProvider {
  LOCAL
  GOOGLE
}

model VerificationCode {
  id        String   @id @default(cuid())
  userId    String
  code      String 
  type      VerificationType
  expiresAt DateTime
  isUsed    Boolean  @default(false)
  createdAt DateTime @default(now())
   
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
   
  @@map("verification_codes")
}

enum VerificationType {
  REGISTRATION
  GOOGLE_AUTH
}

model RefreshToken {
  id        String   @id @default(cuid())
  userId    String
  jti       String   @unique
  tokenHash String
  expiresAt DateTime
  createdAt DateTime @default(now())
  revokedAt DateTime?
  replacedByTokenId String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("refresh_tokens")
}